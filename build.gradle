plugins {
    id 'java'
    id 'application'
}

application {
    mainClassName = 'net.education.kyivstar.Application'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group 'net.education'
version '2.0'

repositories {
    mavenCentral()
}

dependencies {

    implementation("org.aeonbits.owner:owner:${aeonbits}")
    implementation("org.yaml:snakeyaml:${snakeyaml}")
    implementation("ch.vorburger.mariaDB4j:mariaDB4j:${mariaDB4j}")
    implementation("org.jasypt:jasypt:${jasypt}")
    implementation("org.junit.jupiter:junit-jupiter-api:${junit}")
    implementation("com.github.javafaker:javafaker:$faker")
    implementation("ch.qos.logback:logback-classic:${logback}")
    testRuntimeOnly("ch.qos.logback:logback-core:${logback}")
    testRuntimeOnly("org.slf4j:slf4j-api:${slf4j}")
    testImplementation("org.hamcrest:hamcrest-core:${hamcrestcore}")
    testImplementation("org.hamcrest:hamcrest:${hamcrest}")
    testImplementation("org.hamcrest:hamcrest-junit:${hamcrestjunit}")
    testImplementation("org.assertj:assertj-core:${assertj}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junit}")
    testRuntimeOnly("com.github.javafaker:javafaker:${faker}")
    implementation("org.mariadb.jdbc:mariadb-java-client:${mariaDb}")
    implementation( "com.zaxxer:HikariCP:${hikari}")
}

test {
    useJUnitPlatform()
}


jar {
    duplicatesStrategy = 'exclude'

    from sourceSets.main.output
    from(sourceSets.main.resources) {
        eachFile { file ->
            file.path = "resources/${file.path}"
        }
    }

    from configurations.runtimeClasspath.collect { zipTree(it) }


    manifest {
        attributes 'Main-Class': application.mainClassName
    }
}

